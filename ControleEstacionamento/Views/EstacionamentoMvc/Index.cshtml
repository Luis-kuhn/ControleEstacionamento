@using Newtonsoft.Json
@model List<ControleEstacionamento.Controllers.EstacionamentoViewModel>

    @{
    ViewData["Title"] = "Veículos Estacionados";
    }

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

    <h1>Veículos Estacionados</h1>

    <div class="mb-3">
        <button class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#modalEntrada">Cadastrar Novo Veículo</button>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#modalSaida">Registrar Saída</button>
    </div>

    @if (TempData["ErroEntrada"] != null)
{
    <div class="alert alert-danger">@TempData["ErroEntrada"]</div>
}
    @if (TempData["ErroSaida"] != null)
{
    <div class="alert alert-danger">@TempData["ErroSaida"]</div>
}
    @if (TempData["ValorPago"] != null)
{
    <div class="alert alert-success">
        Saída registrada para o veículo <strong>@TempData["PlacaSaida"]</strong> (@TempData["ModeloSaida"]). Valor a pagar: <strong>@string.Format("{0:C}", TempData["ValorPago"])</strong>
    </div>
}

    <table class="table table-striped table-bordered align-middle">
        <thead class="table-dark">
            <tr>
                <th>Placa</th>
                <th>Modelo</th>
                <th>Horário de Chegada</th>
                <th>Horário de Saída</th>
                <th>Duração</th>
                <th>Tempo Cobrado (horas)</th>
                <th>Preço Hora Inicial</th>
                <th>Preço Hora Adicional</th>
                <th>Valor a Pagar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
        {
            <tr>
                <td>@item.Placa</td>
                <td>@(string.IsNullOrEmpty(item.Modelo) ? "-" : item.Modelo)</td>
                <td>@item.HorarioEntrada.ToString("g")</td>
                <td>@(item.HorarioSaida.HasValue ? item.HorarioSaida.Value.ToString("g") : "-")</td>
                <td>
                    @{
                        int horas = (int)item.Duracao.TotalHours;
                        int minutos = item.Duracao.Minutes;
                    }
                    @($"{horas}h {minutos}m")
                </td>
                <td>@item.TempoCobradoHoras</td>
                <td>@(item.PrecoHoraInicial.HasValue ? item.PrecoHoraInicial.Value.ToString("C") : "-")</td>
                <td>@(item.PrecoHoraAdicional.HasValue ? item.PrecoHoraAdicional.Value.ToString("C") : "-")</td>
                <td>@(item.ValorAPagar.HasValue ? item.ValorAPagar.Value.ToString("C") : "-")</td>
            </tr>
        }
        </tbody>
    </table>

    <!-- Modal para Cadastrar Entrada -->
    <div class="modal fade" id="modalEntrada" tabindex="-1" aria-labelledby="modalEntradaLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form method="post" asp-action="RegistrarEntrada" asp-controller="EstacionamentoMvc">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalEntradaLabel">Cadastrar Novo Veículo</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="placa" class="form-label">Placa</label>
                            <input type="text" class="form-control" id="placa" name="placa" required maxlength="10" />
                        </div>
                        <div class="mb-3">
                            <label for="modelo" class="form-label">Modelo</label>
                            <input type="text" class="form-control" id="modelo" name="modelo" maxlength="50" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Registrar Entrada</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal para Registrar Saída -->
    <div class="modal fade" id="modalSaida" tabindex="-1" aria-labelledby="modalSaidaLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form method="post" asp-action="RegistrarSaida" asp-controller="EstacionamentoMvc">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalSaidaLabel">Registrar Saída do Veículo</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="estacionamentoId" class="form-label">Selecione o veículo</label>
                            <select class="form-select" id="estacionamentoId" name="estacionamentoId" required>
                                <option value="" selected disabled>-- Selecione --</option>
                                @foreach (var item in Model.Where(e => !e.HorarioSaida.HasValue))
                            {
                                <option value="@item.Id" data-placa="@item.Placa" data-modelo="@item.Modelo">
                                    @item.Placa - @(string.IsNullOrEmpty(item.Modelo) ? "-" : item.Modelo)
                                </option>
                            }
                            </select>
                        </div>
                        <div id="infoVeiculo" class="border p-3 mb-3" style="display:none;">
                            <h4>Informações do Veículo</h4>
                            <p><strong>Placa:</strong> <span id="infoPlaca"></span></p>
                            <p><strong>Modelo:</strong> <span id="infoModelo"></span></p>
                            <p><strong>Valor a Pagar:</strong> <span id="infoValor" class="fs-4 fw-bold"></span></p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success">Confirmar Saída</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
    const selectVeiculo = document.getElementById('estacionamentoId');
    const infoVeiculo = document.getElementById('infoVeiculo');
    const infoPlaca = document.getElementById('infoPlaca');
    const infoModelo = document.getElementById('infoModelo');
    const infoValor = document.getElementById('infoValor');

    // Dados do modelo para calcular valor a pagar no modal saída
    const veiculos = @Html.Raw(JsonConvert.SerializeObject(Model.Where(e => !e.HorarioSaida.HasValue).Select(e => new {
        e.Id,
        e.Placa,
        e.Modelo,
        e.HorarioEntrada,
        PrecoHoraInicial = e.PrecoHoraInicial ?? 0,
        PrecoHoraAdicional = e.PrecoHoraAdicional ?? 0
    })));

    function calcularValorAPagar(entrada, precoHoraInicial, precoHoraAdicional) {
        const entradaDate = new Date(entrada);
        const agora = new Date();
        const diffMs = agora - entradaDate;
        const diffMins = diffMs / 60000;

        if (diffMins <= 30) {
            return precoHoraInicial / 2;
        }

        const horas = Math.floor(diffMins / 60);
        const minutosRestantes = diffMins % 60;

        let horasAdicionais = minutosRestantes > 10 ? 1 : 0;
        let totalHoras = horas + horasAdicionais;
        if (totalHoras === 0) totalHoras = 1;

        let valor = precoHoraInicial;
        if (totalHoras > 1) {
            valor += (totalHoras - 1) * precoHoraAdicional;
        }
        return valor;
    }

    selectVeiculo.addEventListener('change', function () {
        const idSelecionado = parseInt(this.value);
        if (!idSelecionado) {
            infoVeiculo.style.display = 'none';
            return;
        }

        const veiculo = veiculos.find(v => v.Id === idSelecionado);
        if (!veiculo) {
            infoVeiculo.style.display = 'none';
            return;
        }

        infoPlaca.textContent = veiculo.Placa;
        infoModelo.textContent = veiculo.Modelo || '-';

        const valor = calcularValorAPagar(veiculo.HorarioEntrada, veiculo.PrecoHoraInicial, veiculo.PrecoHoraAdicional);
        infoValor.textContent = valor.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });

        infoVeiculo.style.display = 'block';
    });
    </script>
